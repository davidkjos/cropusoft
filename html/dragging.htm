<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
<title>Polygonlive</title>
<style type="text/css">


BODY { font-family: Arial; font-size: small;
background-color: #CCCCFF;}

A:hover {color: red; text-decoration: underline; }


</style>
<script src="jquery-1.3.2.js" type="text/javascript"></script>
<script src="http://maps.google.com/maps?file=api&v=2.69"type="text/javascript"></script>

</head>
<body onload="load()" ">

<div id="forehead" style="position: absolute; top:0px;left:10px;width: 550px; height: 40px"><h2>Esa's Google Maps 

API examples</h2>
</div>

<div id="novel" style="position: absolute; top:60px; left:600px; width:360px; height:600px; text-align:left">

<h3>Filled polygon</h3>

<ul>

<li>Drag any marker<br/><br/>


<li>
<input type="button" id="fit" value="Delete/Add" onclick="fit()" style="width:80px;" 
title="Zooms to show all the markers" />
<input type="button" id="fit" value="Save" onclick="save()" style="width:80px;" 
title="Zooms to show all the markers" />

<li>Filled polygon came with api v2.69
<li>discovered by Mike Williams

<li>Power of SVG is seen here with a suitable browser
<li>the example is much slower with Interner Explorer (and VML)

</ul>

<h3>Recommended</h3>
<ul>

<li>
<script type="text/javascript"><!--
google_ad_client = "pub-3649938975494252";
google_ad_width = 180;
google_ad_height = 60;
google_ad_format = "180x60_as_rimg";
google_cpa_choice = "CAAQ24Oy0QEaCGbgW7AaXRokKMu293M";
//--></script>
<script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

<li>gmapsapiATgmailDOTcom
<li>
<a href="http://koti.mbnet.fi/ojalesa/exam/index.html">Example index</a>

</ul>
</div>

<div id="outline" style="position: absolute; top:60px;left:20px;width:512px; height:440px; 

-moz-outline-radius:20px; -moz-box-sizing:padding-box; -moz-outline-style:solid ;-moz-outline-color:#9FB6CD; 

-moz-outline-width:10px;visibility:transparent;">
</div>

<div id="map" style="position: absolute; top:60px;left:20px;width:512px; height:440px; "></div>

<div id="ads" style="position: absolute; top:520px;left:20px;width:512px; height:60px; ">


<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>



</div>


<script type="text/javascript">
//<![CDATA[



////map
      

var map = new GMap2(document.getElementById("map"));
var start = new GLatLng(37.443109, -122.146189);
map.setCenter(start, 16);
map.addControl(new GMapTypeControl(1));
map.addControl(new GLargeMapControl());
map.addControl(new GScaleControl());



// red marker icon

//icon.infoWindowAnchor = new GPoint(5, 1);

var marker = [];
var point=[];
var poly = [];
var line = null;
var icon = null;
/////////////////////// 
var count=0;

var isAdd=true;
function draw1(){


	icon = new GIcon();
	icon.image = "http://labs.google.com/ridefinder/images/mm_20_red.png";
	icon.shadow = "http://labs.google.com/ridefinder/images/mm_20_shadow.png";
	icon.iconSize = new GSize(12, 20);
	icon.shadowSize = new GSize(22, 20);
	icon.iconAnchor = new GPoint(6, 20);
	
	icon2 = new GIcon();
	icon2.image = "http://labs.google.com/ridefinder/images/mm_20_blue.png";
	icon2.shadow = "http://labs.google.com/ridefinder/images/mm_20_shadow.png";
	icon2.iconSize = new GSize(12, 20);
	icon2.shadowSize = new GSize(22, 20);
	icon2.iconAnchor = new GPoint(6, 20);
	
	
	// Markers
	
	for (var n = 0; n < point.length; n++) {
		marker[n] = new GMarker(point[n], {
			icon: icon,
			draggable: true
		});
		map.addOverlay(marker[n]);

		marker[n].enableDragging();
		GEvent.addListener(marker[n], 'drag', function(){
			draw2()
		});
		
	};//for
	
	GEvent.addListener(map, 'click', function(overlay){
				for (var i = 0; i < marker.length; i++) {
					if (overlay == marker[i]) {
						if (isAdd) {
							if (firstSelected == null) {
								firstSelectedIndex = i;
								firstSelected = new GLatLng(marker[i].getPoint().lat(), marker[i].getPoint().lng());
								map.removeOverlay(marker[i]);
								marker[i] = new GMarker(firstSelected, {
									icon: icon2,
									draggable: false
								});
								map.addOverlay(marker[i]);
							}
							else 
								if (Math.abs(firstSelectedIndex - i) == 1 || Math.abs(firstSelectedIndex - i) == marker.length - 1) {
									secondSelectedIndex = i;
									var middleLat = firstSelected.lat() + (marker[i].getPoint().lat() - firstSelected.lat()) / 2
									var middleLng = firstSelected.lng() + (marker[i].getPoint().lng() - firstSelected.lng()) / 2
									var middlePoint = new GLatLng(middleLat, middleLng);
									
									//change first selcted marker to red
									map.removeOverlay(marker[firstSelectedIndex]);
									marker[firstSelectedIndex] = new GMarker(firstSelected, {
										icon: icon,
										draggable: true
									});
									map.addOverlay(marker[firstSelectedIndex]);
									marker[firstSelectedIndex].enableDragging();
									GEvent.addListener(marker[firstSelectedIndex], 'drag', function(){
										draw2()
									});
									
									//add new marker
									var newIndex = marker.length;
									
									var newMarkerIndex;
									var otherMarkerIndex;

									if (firstSelectedIndex > secondSelectedIndex) {
										newMarkerIndex = firstSelectedIndex;
										otherMarkerIndex = secondSelectedIndex;
									}
									else {
										newMarkerIndex = secondSelectedIndex;
										otherMarkerIndex = firstSelectedIndex;
									}
									
									if ((newMarkerIndex == marker.length - 1) && (newMarkerIndex - otherMarkerIndex != 1)) {
									
										newMarkerIndex = 0;
									}
									
									
									for (var j = newIndex; j > newMarkerIndex; j--) {
										var k = j - 1;
										marker[j] = marker[j - 1];
									}
									
									marker[newMarkerIndex] = new GMarker(middlePoint, {
										icon: icon,
										draggable: true
									});
									map.addOverlay(marker[newMarkerIndex]);
									
									
									marker[newMarkerIndex].enableDragging();
									GEvent.addListener(marker[newMarkerIndex], 'drag', function(){
										draw2()
									});
									firstSelected = null;
									draw2();
								}//else
							break;
						}
						else {
							var deleteIndex = i;
							map.removeOverlay(marker[deleteIndex]);

							for (var j=deleteIndex; j<marker.length-1; j++){
								var k = j+1;
								//alert("moving "+k+" to "+j);
								marker[j]=marker[j+1];
							}
							marker[marker.length-1]=null;
							marker.length = marker.length-1;
							//alert(marker.length);
							draw2();
						}
					}//if (overlay == marker[i]) {
					
				}//FOR
		});//click
	
	
}//draw1
// Polygon

var firstSelected=null;
var firstSelectedIndex=null;

function draw2()
{
poly.length=0; 
//alert("length="+marker.length);
for(var i=0;i<marker.length;i++)
{
poly.push(marker[i].getPoint());
}
poly.push(marker[0].getPoint());
if(line){map.removeOverlay(line)};
line=new GPolygon(poly,'#FF0000', 3, 1,'#0000FF',0.2);
map.addOverlay(line);
};



function load(){
		point.push(new GLatLng(37.44268, -122.14854));
	point.push(new GLatLng(37.44188, -122.14739));
	point.push(new GLatLng(37.44247, -122.14681));
	point.push(new GLatLng(37.44152, -122.14530));
	point.push(new GLatLng(37.44183, -122.14423));
	
	draw1();
	draw2();
}

function fit(){

		if (isAdd) isAdd = false;
		else isAdd = true;
}


function save(){
	alert("saving...");
	var saveThis = "";
	saveThis+="<vertices>";
	for (var i=0;i<marker.length;i++){
		saveThis+="<vertex lat='"+marker[i].getPoint().lat()+"' lng='"+marker[i].getPoint().lng()+"'/>";
	}
	saveThis+="</vertices>";
	alert(saveThis);
	try {
		$.ajax({
			url: '/',
			type: 'POST',
			data: {
				polygon: saveThis,
				name: "yup2"
			},
			dataType: 'xml',
			error: function(xhr){
				if (xhr.status==200){
					alert("saved");
					$.ajax({
						url: '/',
						type: 'GET',
						success: function(data){
							var poly = createPolygonFromAtts(data);
							map.addOverlay(poly);
						}
						
					})
				}
				else {
					alert(xhr.status+": "+xhr.statusText);
				}
			}
		})
	}
	catch (e){
		alert(e);
	}
}

//]]>


function createPolygonFromAtts(vertices){
	var length = $(vertices).find("vertex").length;
	var pts = [];
	for (var i = 0; i < length; i++) {
		var j = i + 1;
		pts[i] = new GLatLng($(vertices).find("vertex:nth-child(" + j + ")").attr("lat"), $(vertices).find("vertex:nth-child(" + j + ")").attr("lng"));
	}	

	var poly = new GPolygon(pts,"#000000",1,1,"#d4d4d4",0.5,{clickable:true});
	return poly;
}


</script>

<!-- Start of StatCounter Code -->
<script type="text/javascript" language="javascript">
var sc_project=1532293; 
var sc_invisible=1; 
var sc_partition=14; 
var sc_security="a67fd711"; 
</script>

<script type="text/javascript" language="javascript" 

src="http://www.statcounter.com/counter/counter.js"></script><noscript><a href="http://www.statcounter.com/" 

target="_blank"><img  

src="http://c15.statcounter.com/counter.php?sc_project=1532293&java=0&security=a67fd711&invisible=1" alt="counter 

hit xanga" border="0"></a> </noscript>
<!-- End of StatCounter Code -->

</body>
</html>
